Component: Arm Compiler for Embedded 6.21 Tool: armlink [5ec1fa00]

==============================================================================

Section Cross References

    startup_stm32f103xe.o(RESET) refers to startup_stm32f103xe.o(STACK) for __initial_sp
    startup_stm32f103xe.o(RESET) refers to startup_stm32f103xe.o(.text) for Reset_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.NMI_Handler) for NMI_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.MemManage_Handler) for MemManage_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.BusFault_Handler) for BusFault_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.UsageFault_Handler) for UsageFault_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.DebugMon_Handler) for DebugMon_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.DMA1_Channel4_IRQHandler) for DMA1_Channel4_IRQHandler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.DMA1_Channel5_IRQHandler) for DMA1_Channel5_IRQHandler
    startup_stm32f103xe.o(RESET) refers to mycandrive_reg.o(.text.USB_HP_CAN1_TX_IRQHandler) for USB_HP_CAN1_TX_IRQHandler
    startup_stm32f103xe.o(RESET) refers to mycandrive_reg.o(.text.CAN1_RX1_IRQHandler) for CAN1_RX1_IRQHandler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f103xe.o(.text) refers to system_stm32f1xx.o(.text.SystemInit) for SystemInit
    startup_stm32f103xe.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    main.o(.text.main) refers to main.o(.text.SystemClock_Config) for SystemClock_Config
    main.o(.text.main) refers to gpio.o(.text.MX_GPIO_Init) for MX_GPIO_Init
    main.o(.text.main) refers to dma.o(.text.MX_DMA_Init) for MX_DMA_Init
    main.o(.text.main) refers to usart.o(.text.MX_USART1_UART_Init) for MX_USART1_UART_Init
    main.o(.text.main) refers to main.o(.bss.usart1_rx_rb_buffer) for usart1_rx_rb_buffer
    main.o(.text.main) refers to main.o(.bss.usart1_tx_rb_buffer) for usart1_tx_rb_buffer
    main.o(.text.main) refers to main.o(.bss.usart1_tx_dma_buffer) for usart1_tx_dma_buffer
    main.o(.text.main) refers to main.o(.bss.usart1_rx_dma_buffer) for usart1_rx_dma_buffer
    main.o(.text.main) refers to main.o(.bss.usart1_driver) for usart1_driver
    main.o(.text.main) refers to bsp_usart_drive.o(.text.USART_LL_Config) for USART_LL_Config
    main.o(.text.main) refers to bsp_usart_drive.o(.text.USART_LL_Module_Run) for USART_LL_Module_Run
    main.o(.text.main) refers to stm32f1xx_ll_utils.o(.text.LL_mDelay) for LL_mDelay
    main.o(.text.main) refers to strlen.o(.text) for strlen
    main.o(.text.main) refers to bsp_usart_drive.o(.text.USART_LL_Put_TxData_To_Ringbuffer) for USART_LL_Put_TxData_To_Ringbuffer
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.SystemClock_Config) refers to stm32f1xx_ll_utils.o(.text.LL_Init1msTick) for LL_Init1msTick
    main.o(.text.SystemClock_Config) refers to stm32f1xx_ll_utils.o(.text.LL_SetSystemCoreClock) for LL_SetSystemCoreClock
    main.o(.ARM.exidx.text.SystemClock_Config) refers to main.o(.text.SystemClock_Config) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Error_Handler) refers to main.o(.text.Error_Handler) for [Anonymous Symbol]
    gpio.o(.text.MX_GPIO_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    gpio.o(.ARM.exidx.text.MX_GPIO_Init) refers to gpio.o(.text.MX_GPIO_Init) for [Anonymous Symbol]
    dma.o(.ARM.exidx.text.MX_DMA_Init) refers to dma.o(.text.MX_DMA_Init) for [Anonymous Symbol]
    usart.o(.text.MX_USART1_UART_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    usart.o(.text.MX_USART1_UART_Init) refers to stm32f1xx_ll_usart.o(.text.LL_USART_Init) for LL_USART_Init
    usart.o(.ARM.exidx.text.MX_USART1_UART_Init) refers to usart.o(.text.MX_USART1_UART_Init) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.NMI_Handler) refers to stm32f1xx_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.HardFault_Handler) refers to stm32f1xx_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.MemManage_Handler) refers to stm32f1xx_it.o(.text.MemManage_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.BusFault_Handler) refers to stm32f1xx_it.o(.text.BusFault_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.UsageFault_Handler) refers to stm32f1xx_it.o(.text.UsageFault_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.SVC_Handler) refers to stm32f1xx_it.o(.text.SVC_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.DebugMon_Handler) refers to stm32f1xx_it.o(.text.DebugMon_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.PendSV_Handler) refers to stm32f1xx_it.o(.text.PendSV_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.SysTick_Handler) refers to stm32f1xx_it.o(.text.SysTick_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.text.DMA1_Channel4_IRQHandler) refers to main.o(.bss.usart1_driver) for usart1_driver
    stm32f1xx_it.o(.text.DMA1_Channel4_IRQHandler) refers to bsp_usart_drive.o(.text.USART_LL_DMA_TX_Interrupt_Handler) for USART_LL_DMA_TX_Interrupt_Handler
    stm32f1xx_it.o(.ARM.exidx.text.DMA1_Channel4_IRQHandler) refers to stm32f1xx_it.o(.text.DMA1_Channel4_IRQHandler) for [Anonymous Symbol]
    stm32f1xx_it.o(.text.DMA1_Channel5_IRQHandler) refers to main.o(.bss.usart1_driver) for usart1_driver
    stm32f1xx_it.o(.text.DMA1_Channel5_IRQHandler) refers to bsp_usart_drive.o(.text.USART_LL_DMA_RX_Interrupt_Handler) for USART_LL_DMA_RX_Interrupt_Handler
    stm32f1xx_it.o(.ARM.exidx.text.DMA1_Channel5_IRQHandler) refers to stm32f1xx_it.o(.text.DMA1_Channel5_IRQHandler) for [Anonymous Symbol]
    stm32f1xx_it.o(.text.USART1_IRQHandler) refers to main.o(.bss.usart1_driver) for usart1_driver
    stm32f1xx_it.o(.text.USART1_IRQHandler) refers to bsp_usart_drive.o(.text.USART_LL_RX_Interrupt_Handler) for USART_LL_RX_Interrupt_Handler
    stm32f1xx_it.o(.ARM.exidx.text.USART1_IRQHandler) refers to stm32f1xx_it.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_DeInit) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_StructInit) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_DeInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_Init) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_Init) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.text.LL_DMA_StructInit) refers to memseta.o(.text) for __aeabi_memclr4
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_StructInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_pwr.o(.ARM.exidx.text.LL_PWR_DeInit) refers to stm32f1xx_ll_pwr.o(.text.LL_PWR_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DeInit) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_StructInit) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_DeInit) refers to stm32f1xx_ll_usart.o(.text.LL_USART_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.text.LL_USART_Init) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for LL_RCC_GetSystemClocksFreq
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_Init) refers to stm32f1xx_ll_usart.o(.text.LL_USART_Init) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_StructInit) refers to stm32f1xx_ll_usart.o(.text.LL_USART_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockInit) refers to stm32f1xx_ll_usart.o(.text.LL_USART_ClockInit) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockStructInit) refers to stm32f1xx_ll_usart.o(.text.LL_USART_ClockStructInit) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to system_stm32f1xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to system_stm32f1xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetSystemClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) refers to system_stm32f1xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetHCLKClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) refers to system_stm32f1xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK1ClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) refers to system_stm32f1xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK2ClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSBClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32f1xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to system_stm32f1xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to system_stm32f1xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetADCClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick) refers to stm32f1xx_ll_utils.o(.text.LL_Init1msTick) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_mDelay) refers to stm32f1xx_ll_utils.o(.text.LL_mDelay) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.LL_SetSystemCoreClock) refers to system_stm32f1xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock) refers to stm32f1xx_ll_utils.o(.text.LL_SetSystemCoreClock) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_SetFlashLatency) refers to stm32f1xx_ll_utils.o(.text.LL_SetFlashLatency) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for UTILS_EnablePLLAndSwitchSystem
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_stm32f1xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_stm32f1xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f1xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for UTILS_EnablePLLAndSwitchSystem
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) for [Anonymous Symbol]
    system_stm32f1xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32f1xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f1xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f1xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f1xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f1xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f1xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f1xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    mycandrive_reg.o(.text.CAN_Config) refers to mycandrive_reg.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mycandrive_reg.o(.text.CAN_Config) refers to mycandrive_reg.o(.bss.g_CanRxRBDataBuffer) for g_CanRxRBDataBuffer
    mycandrive_reg.o(.text.CAN_Config) refers to lwrb.o(.text.lwrb_init) for lwrb_init
    mycandrive_reg.o(.text.CAN_Config) refers to mycandrive_reg.o(.bss.g_CanTxRBDataBuffer) for g_CanTxRBDataBuffer
    mycandrive_reg.o(.ARM.exidx.text.CAN_Config) refers to mycandrive_reg.o(.text.CAN_Config) for [Anonymous Symbol]
    mycandrive_reg.o(.text.CAN_SendMessage_Blocking) refers to main.o(.text.Error_Handler) for Error_Handler
    mycandrive_reg.o(.text.CAN_SendMessage_Blocking) refers to stm32f1xx_ll_utils.o(.text.LL_mDelay) for LL_mDelay
    mycandrive_reg.o(.text.CAN_SendMessage_Blocking) refers to mycandrive_reg.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mycandrive_reg.o(.ARM.exidx.text.CAN_SendMessage_Blocking) refers to mycandrive_reg.o(.text.CAN_SendMessage_Blocking) for [Anonymous Symbol]
    mycandrive_reg.o(.text.CAN_SendMessage_NonBlocking) refers to main.o(.text.Error_Handler) for Error_Handler
    mycandrive_reg.o(.text.CAN_SendMessage_NonBlocking) refers to mycandrive_reg.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mycandrive_reg.o(.ARM.exidx.text.CAN_SendMessage_NonBlocking) refers to mycandrive_reg.o(.text.CAN_SendMessage_NonBlocking) for [Anonymous Symbol]
    mycandrive_reg.o(.text.CAN_Check_Error) refers to mycandrive_reg.o(.bss.gCanESR) for gCanESR
    mycandrive_reg.o(.ARM.exidx.text.CAN_Check_Error) refers to mycandrive_reg.o(.text.CAN_Check_Error) for [Anonymous Symbol]
    mycandrive_reg.o(.text.CAN_BusOff_Recover) refers to mycandrive_reg.o(.text.CAN_Config) for CAN_Config
    mycandrive_reg.o(.ARM.exidx.text.CAN_BusOff_Recover) refers to mycandrive_reg.o(.text.CAN_BusOff_Recover) for [Anonymous Symbol]
    mycandrive_reg.o(.text.CAN_Data_Process) refers to mycandrive_reg.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mycandrive_reg.o(.text.CAN_Data_Process) refers to lwrb.o(.text.lwrb_get_full) for lwrb_get_full
    mycandrive_reg.o(.text.CAN_Data_Process) refers to lwrb.o(.text.lwrb_read) for lwrb_read
    mycandrive_reg.o(.ARM.exidx.text.CAN_Data_Process) refers to mycandrive_reg.o(.text.CAN_Data_Process) for [Anonymous Symbol]
    mycandrive_reg.o(.text.CAN_Get_CANMsg_From_RB_To_TXMailBox_IT) refers to mycandrive_reg.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mycandrive_reg.o(.text.CAN_Get_CANMsg_From_RB_To_TXMailBox_IT) refers to lwrb.o(.text.lwrb_get_full) for lwrb_get_full
    mycandrive_reg.o(.text.CAN_Get_CANMsg_From_RB_To_TXMailBox_IT) refers to lwrb.o(.text.lwrb_peek) for lwrb_peek
    mycandrive_reg.o(.text.CAN_Get_CANMsg_From_RB_To_TXMailBox_IT) refers to mycandrive_reg.o(.text.CAN_SendMessage_NonBlocking) for CAN_SendMessage_NonBlocking
    mycandrive_reg.o(.text.CAN_Get_CANMsg_From_RB_To_TXMailBox_IT) refers to lwrb.o(.text.lwrb_skip) for lwrb_skip
    mycandrive_reg.o(.ARM.exidx.text.CAN_Get_CANMsg_From_RB_To_TXMailBox_IT) refers to mycandrive_reg.o(.text.CAN_Get_CANMsg_From_RB_To_TXMailBox_IT) for [Anonymous Symbol]
    mycandrive_reg.o(.text.CAN_Get_CANMsg_From_RB_To_TXMailBox) refers to mycandrive_reg.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mycandrive_reg.o(.text.CAN_Get_CANMsg_From_RB_To_TXMailBox) refers to lwrb.o(.text.lwrb_get_full) for lwrb_get_full
    mycandrive_reg.o(.text.CAN_Get_CANMsg_From_RB_To_TXMailBox) refers to lwrb.o(.text.lwrb_peek) for lwrb_peek
    mycandrive_reg.o(.text.CAN_Get_CANMsg_From_RB_To_TXMailBox) refers to mycandrive_reg.o(.text.CAN_SendMessage_NonBlocking) for CAN_SendMessage_NonBlocking
    mycandrive_reg.o(.text.CAN_Get_CANMsg_From_RB_To_TXMailBox) refers to lwrb.o(.text.lwrb_skip) for lwrb_skip
    mycandrive_reg.o(.ARM.exidx.text.CAN_Get_CANMsg_From_RB_To_TXMailBox) refers to mycandrive_reg.o(.text.CAN_Get_CANMsg_From_RB_To_TXMailBox) for [Anonymous Symbol]
    mycandrive_reg.o(.text.CAN_Send_CAN_STD_Message) refers to mycandrive_reg.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mycandrive_reg.o(.text.CAN_Send_CAN_STD_Message) refers to lwrb.o(.text.lwrb_get_free) for lwrb_get_free
    mycandrive_reg.o(.text.CAN_Send_CAN_STD_Message) refers to memcpya.o(.text) for __aeabi_memcpy
    mycandrive_reg.o(.text.CAN_Send_CAN_STD_Message) refers to lwrb.o(.text.lwrb_write) for lwrb_write
    mycandrive_reg.o(.ARM.exidx.text.CAN_Send_CAN_STD_Message) refers to mycandrive_reg.o(.text.CAN_Send_CAN_STD_Message) for [Anonymous Symbol]
    mycandrive_reg.o(.text.USB_HP_CAN1_TX_IRQHandler) refers to mycandrive_reg.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mycandrive_reg.o(.text.USB_HP_CAN1_TX_IRQHandler) refers to lwrb.o(.text.lwrb_get_full) for lwrb_get_full
    mycandrive_reg.o(.text.USB_HP_CAN1_TX_IRQHandler) refers to lwrb.o(.text.lwrb_peek) for lwrb_peek
    mycandrive_reg.o(.text.USB_HP_CAN1_TX_IRQHandler) refers to mycandrive_reg.o(.text.CAN_SendMessage_NonBlocking) for CAN_SendMessage_NonBlocking
    mycandrive_reg.o(.text.USB_HP_CAN1_TX_IRQHandler) refers to lwrb.o(.text.lwrb_skip) for lwrb_skip
    mycandrive_reg.o(.ARM.exidx.text.USB_HP_CAN1_TX_IRQHandler) refers to mycandrive_reg.o(.text.USB_HP_CAN1_TX_IRQHandler) for [Anonymous Symbol]
    mycandrive_reg.o(.text.CAN1_RX1_IRQHandler) refers to mycandrive_reg.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mycandrive_reg.o(.text.CAN1_RX1_IRQHandler) refers to lwrb.o(.text.lwrb_write) for lwrb_write
    mycandrive_reg.o(.text.CAN1_RX1_IRQHandler) refers to lwrb.o(.text.lwrb_get_free) for lwrb_get_free
    mycandrive_reg.o(.text.CAN1_RX1_IRQHandler) refers to lwrb.o(.text.lwrb_reset) for lwrb_reset
    mycandrive_reg.o(.ARM.exidx.text.CAN1_RX1_IRQHandler) refers to mycandrive_reg.o(.text.CAN1_RX1_IRQHandler) for [Anonymous Symbol]
    myusartdrive.o(.ARM.exidx.text.USART1_SendString_Blocking) refers to myusartdrive.o(.text.USART1_SendString_Blocking) for [Anonymous Symbol]
    myusartdrive.o(.text.USART1_Reinit) refers to myusartdrive.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    myusartdrive.o(.text.USART1_Reinit) refers to usart.o(.text.MX_USART1_UART_Init) for MX_USART1_UART_Init
    myusartdrive.o(.text.USART1_Reinit) refers to myusartdrive.o(.bss.rx_buffer) for rx_buffer
    myusartdrive.o(.ARM.exidx.text.USART1_Reinit) refers to myusartdrive.o(.text.USART1_Reinit) for [Anonymous Symbol]
    myusartdrive.o(.text.USART1_TX_DMA1_Channel4_Interrupt_Handler) refers to myusartdrive.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    myusartdrive.o(.ARM.exidx.text.USART1_TX_DMA1_Channel4_Interrupt_Handler) refers to myusartdrive.o(.text.USART1_TX_DMA1_Channel4_Interrupt_Handler) for [Anonymous Symbol]
    myusartdrive.o(.text.USART1_RX_DMA1_Channel5_Interrupt_Handler) refers to myusartdrive.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    myusartdrive.o(.text.USART1_RX_DMA1_Channel5_Interrupt_Handler) refers to myusartdrive.o(.bss.rx_buffer) for rx_buffer
    myusartdrive.o(.text.USART1_RX_DMA1_Channel5_Interrupt_Handler) refers to myusartdrive.o(.text.USART1_Put_Data_Into_Ringbuffer) for USART1_Put_Data_Into_Ringbuffer
    myusartdrive.o(.ARM.exidx.text.USART1_RX_DMA1_Channel5_Interrupt_Handler) refers to myusartdrive.o(.text.USART1_RX_DMA1_Channel5_Interrupt_Handler) for [Anonymous Symbol]
    myusartdrive.o(.text.USART1_RX_Interrupt_Handler) refers to myusartdrive.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    myusartdrive.o(.text.USART1_RX_Interrupt_Handler) refers to myusartdrive.o(.bss.rx_buffer) for rx_buffer
    myusartdrive.o(.text.USART1_RX_Interrupt_Handler) refers to myusartdrive.o(.text.USART1_Put_Data_Into_Ringbuffer) for USART1_Put_Data_Into_Ringbuffer
    myusartdrive.o(.ARM.exidx.text.USART1_RX_Interrupt_Handler) refers to myusartdrive.o(.text.USART1_RX_Interrupt_Handler) for [Anonymous Symbol]
    myusartdrive.o(.text.USART1_Put_TxData_To_Ringbuffer) refers to myusartdrive.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    myusartdrive.o(.text.USART1_Put_TxData_To_Ringbuffer) refers to lwrb.o(.text.lwrb_get_free) for lwrb_get_free
    myusartdrive.o(.text.USART1_Put_TxData_To_Ringbuffer) refers to lwrb.o(.text.lwrb_get_full) for lwrb_get_full
    myusartdrive.o(.text.USART1_Put_TxData_To_Ringbuffer) refers to lwrb.o(.text.lwrb_skip) for lwrb_skip
    myusartdrive.o(.text.USART1_Put_TxData_To_Ringbuffer) refers to lwrb.o(.text.lwrb_write) for lwrb_write
    myusartdrive.o(.text.USART1_Put_TxData_To_Ringbuffer) refers to lwrb.o(.text.lwrb_reset) for lwrb_reset
    myusartdrive.o(.ARM.exidx.text.USART1_Put_TxData_To_Ringbuffer) refers to myusartdrive.o(.text.USART1_Put_TxData_To_Ringbuffer) for [Anonymous Symbol]
    myusartdrive.o(.text.USART1_Module_Run) refers to myusartdrive.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    myusartdrive.o(.text.USART1_Module_Run) refers to lwrb.o(.text.lwrb_get_full) for lwrb_get_full
    myusartdrive.o(.text.USART1_Module_Run) refers to myusartdrive.o(.bss.tx_buffer) for tx_buffer
    myusartdrive.o(.text.USART1_Module_Run) refers to lwrb.o(.text.lwrb_read) for lwrb_read
    myusartdrive.o(.ARM.exidx.text.USART1_Module_Run) refers to myusartdrive.o(.text.USART1_Module_Run) for [Anonymous Symbol]
    myusartdrive.o(.text.USART1_Config) refers to myusartdrive.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    myusartdrive.o(.text.USART1_Config) refers to myusartdrive.o(.bss.g_Usart1RxRB) for g_Usart1RxRB
    myusartdrive.o(.text.USART1_Config) refers to lwrb.o(.text.lwrb_init) for lwrb_init
    myusartdrive.o(.text.USART1_Config) refers to myusartdrive.o(.bss.g_Usart1TxRB) for g_Usart1TxRB
    myusartdrive.o(.text.USART1_Config) refers to myusartdrive.o(.bss.rx_buffer) for rx_buffer
    myusartdrive.o(.ARM.exidx.text.USART1_Config) refers to myusartdrive.o(.text.USART1_Config) for [Anonymous Symbol]
    myusartdrive.o(.text.USART1_Put_Data_Into_Ringbuffer) refers to myusartdrive.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    myusartdrive.o(.text.USART1_Put_Data_Into_Ringbuffer) refers to lwrb.o(.text.lwrb_get_free) for lwrb_get_free
    myusartdrive.o(.text.USART1_Put_Data_Into_Ringbuffer) refers to lwrb.o(.text.lwrb_get_full) for lwrb_get_full
    myusartdrive.o(.text.USART1_Put_Data_Into_Ringbuffer) refers to lwrb.o(.text.lwrb_skip) for lwrb_skip
    myusartdrive.o(.text.USART1_Put_Data_Into_Ringbuffer) refers to lwrb.o(.text.lwrb_write) for lwrb_write
    myusartdrive.o(.text.USART1_Put_Data_Into_Ringbuffer) refers to lwrb.o(.text.lwrb_reset) for lwrb_reset
    myusartdrive.o(.ARM.exidx.text.USART1_Put_Data_Into_Ringbuffer) refers to myusartdrive.o(.text.USART1_Put_Data_Into_Ringbuffer) for [Anonymous Symbol]
    bsp_usart_drive.o(.ARM.exidx.text.USART_LL_SendString_Blocking) refers to bsp_usart_drive.o(.text.USART_LL_SendString_Blocking) for [Anonymous Symbol]
    bsp_usart_drive.o(.text.USART_LL_Put_TxData_To_Ringbuffer) refers to lwrb.o(.text.lwrb_get_free) for lwrb_get_free
    bsp_usart_drive.o(.text.USART_LL_Put_TxData_To_Ringbuffer) refers to lwrb.o(.text.lwrb_get_full) for lwrb_get_full
    bsp_usart_drive.o(.text.USART_LL_Put_TxData_To_Ringbuffer) refers to lwrb.o(.text.lwrb_skip) for lwrb_skip
    bsp_usart_drive.o(.text.USART_LL_Put_TxData_To_Ringbuffer) refers to lwrb.o(.text.lwrb_write) for lwrb_write
    bsp_usart_drive.o(.text.USART_LL_Put_TxData_To_Ringbuffer) refers to lwrb.o(.text.lwrb_reset) for lwrb_reset
    bsp_usart_drive.o(.ARM.exidx.text.USART_LL_Put_TxData_To_Ringbuffer) refers to bsp_usart_drive.o(.text.USART_LL_Put_TxData_To_Ringbuffer) for [Anonymous Symbol]
    bsp_usart_drive.o(.text.USART_LL_Module_Run) refers to lwrb.o(.text.lwrb_get_full) for lwrb_get_full
    bsp_usart_drive.o(.text.USART_LL_Module_Run) refers to lwrb.o(.text.lwrb_read) for lwrb_read
    bsp_usart_drive.o(.text.USART_LL_Module_Run) refers to bsp_usart_drive.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    bsp_usart_drive.o(.ARM.exidx.text.USART_LL_Module_Run) refers to bsp_usart_drive.o(.text.USART_LL_Module_Run) for [Anonymous Symbol]
    bsp_usart_drive.o(.text.USART_LL_Get_Available_RxData_Length) refers to lwrb.o(.text.lwrb_get_full) for lwrb_get_full
    bsp_usart_drive.o(.ARM.exidx.text.USART_LL_Get_Available_RxData_Length) refers to bsp_usart_drive.o(.text.USART_LL_Get_Available_RxData_Length) for [Anonymous Symbol]
    bsp_usart_drive.o(.text.USART_LL_Read_A_Byte_Data) refers to lwrb.o(.text.lwrb_read) for lwrb_read
    bsp_usart_drive.o(.ARM.exidx.text.USART_LL_Read_A_Byte_Data) refers to bsp_usart_drive.o(.text.USART_LL_Read_A_Byte_Data) for [Anonymous Symbol]
    bsp_usart_drive.o(.text.USART_LL_DMA_TX_Interrupt_Handler) refers to bsp_usart_drive.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    bsp_usart_drive.o(.ARM.exidx.text.USART_LL_DMA_TX_Interrupt_Handler) refers to bsp_usart_drive.o(.text.USART_LL_DMA_TX_Interrupt_Handler) for [Anonymous Symbol]
    bsp_usart_drive.o(.text.USART_LL_DMA_RX_Interrupt_Handler) refers to bsp_usart_drive.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    bsp_usart_drive.o(.text.USART_LL_DMA_RX_Interrupt_Handler) refers to bsp_usart_drive.o(.text.USART_LL_Put_RxData_Into_Ringbuffer) for USART_LL_Put_RxData_Into_Ringbuffer
    bsp_usart_drive.o(.ARM.exidx.text.USART_LL_DMA_RX_Interrupt_Handler) refers to bsp_usart_drive.o(.text.USART_LL_DMA_RX_Interrupt_Handler) for [Anonymous Symbol]
    bsp_usart_drive.o(.text.USART_LL_RX_Interrupt_Handler) refers to bsp_usart_drive.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    bsp_usart_drive.o(.text.USART_LL_RX_Interrupt_Handler) refers to bsp_usart_drive.o(.text.USART_LL_Put_RxData_Into_Ringbuffer) for USART_LL_Put_RxData_Into_Ringbuffer
    bsp_usart_drive.o(.ARM.exidx.text.USART_LL_RX_Interrupt_Handler) refers to bsp_usart_drive.o(.text.USART_LL_RX_Interrupt_Handler) for [Anonymous Symbol]
    bsp_usart_drive.o(.text.USART_LL_Config) refers to lwrb.o(.text.lwrb_init) for lwrb_init
    bsp_usart_drive.o(.text.USART_LL_Config) refers to bsp_usart_drive.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    bsp_usart_drive.o(.ARM.exidx.text.USART_LL_Config) refers to bsp_usart_drive.o(.text.USART_LL_Config) for [Anonymous Symbol]
    bsp_usart_drive.o(.text.USART_LL_DMA_Error_Recover) refers to bsp_usart_drive.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    bsp_usart_drive.o(.ARM.exidx.text.USART_LL_DMA_Error_Recover) refers to bsp_usart_drive.o(.text.USART_LL_DMA_Error_Recover) for [Anonymous Symbol]
    bsp_usart_drive.o(.text.USART_LL_Put_RxData_Into_Ringbuffer) refers to lwrb.o(.text.lwrb_get_free) for lwrb_get_free
    bsp_usart_drive.o(.text.USART_LL_Put_RxData_Into_Ringbuffer) refers to lwrb.o(.text.lwrb_get_full) for lwrb_get_full
    bsp_usart_drive.o(.text.USART_LL_Put_RxData_Into_Ringbuffer) refers to lwrb.o(.text.lwrb_skip) for lwrb_skip
    bsp_usart_drive.o(.text.USART_LL_Put_RxData_Into_Ringbuffer) refers to lwrb.o(.text.lwrb_reset) for lwrb_reset
    bsp_usart_drive.o(.text.USART_LL_Put_RxData_Into_Ringbuffer) refers to lwrb.o(.text.lwrb_write) for lwrb_write
    bsp_usart_drive.o(.ARM.exidx.text.USART_LL_Put_RxData_Into_Ringbuffer) refers to bsp_usart_drive.o(.text.USART_LL_Put_RxData_Into_Ringbuffer) for [Anonymous Symbol]
    lwrb.o(.ARM.exidx.text.lwrb_init) refers to lwrb.o(.text.lwrb_init) for [Anonymous Symbol]
    lwrb.o(.ARM.exidx.text.lwrb_is_ready) refers to lwrb.o(.text.lwrb_is_ready) for [Anonymous Symbol]
    lwrb.o(.ARM.exidx.text.lwrb_free) refers to lwrb.o(.text.lwrb_free) for [Anonymous Symbol]
    lwrb.o(.ARM.exidx.text.lwrb_set_evt_fn) refers to lwrb.o(.text.lwrb_set_evt_fn) for [Anonymous Symbol]
    lwrb.o(.ARM.exidx.text.lwrb_set_arg) refers to lwrb.o(.text.lwrb_set_arg) for [Anonymous Symbol]
    lwrb.o(.ARM.exidx.text.lwrb_get_arg) refers to lwrb.o(.text.lwrb_get_arg) for [Anonymous Symbol]
    lwrb.o(.text.lwrb_write) refers to memcpya.o(.text) for __aeabi_memcpy
    lwrb.o(.ARM.exidx.text.lwrb_write) refers to lwrb.o(.text.lwrb_write) for [Anonymous Symbol]
    lwrb.o(.text.lwrb_write_ex) refers to memcpya.o(.text) for __aeabi_memcpy
    lwrb.o(.ARM.exidx.text.lwrb_write_ex) refers to lwrb.o(.text.lwrb_write_ex) for [Anonymous Symbol]
    lwrb.o(.ARM.exidx.text.lwrb_get_free) refers to lwrb.o(.text.lwrb_get_free) for [Anonymous Symbol]
    lwrb.o(.text.lwrb_read) refers to memcpya.o(.text) for __aeabi_memcpy
    lwrb.o(.ARM.exidx.text.lwrb_read) refers to lwrb.o(.text.lwrb_read) for [Anonymous Symbol]
    lwrb.o(.text.lwrb_read_ex) refers to memcpya.o(.text) for __aeabi_memcpy
    lwrb.o(.ARM.exidx.text.lwrb_read_ex) refers to lwrb.o(.text.lwrb_read_ex) for [Anonymous Symbol]
    lwrb.o(.ARM.exidx.text.lwrb_get_full) refers to lwrb.o(.text.lwrb_get_full) for [Anonymous Symbol]
    lwrb.o(.text.lwrb_peek) refers to memcpya.o(.text) for __aeabi_memcpy
    lwrb.o(.ARM.exidx.text.lwrb_peek) refers to lwrb.o(.text.lwrb_peek) for [Anonymous Symbol]
    lwrb.o(.ARM.exidx.text.lwrb_reset) refers to lwrb.o(.text.lwrb_reset) for [Anonymous Symbol]
    lwrb.o(.ARM.exidx.text.lwrb_get_linear_block_read_address) refers to lwrb.o(.text.lwrb_get_linear_block_read_address) for [Anonymous Symbol]
    lwrb.o(.ARM.exidx.text.lwrb_get_linear_block_read_length) refers to lwrb.o(.text.lwrb_get_linear_block_read_length) for [Anonymous Symbol]
    lwrb.o(.ARM.exidx.text.lwrb_skip) refers to lwrb.o(.text.lwrb_skip) for [Anonymous Symbol]
    lwrb.o(.ARM.exidx.text.lwrb_get_linear_block_write_address) refers to lwrb.o(.text.lwrb_get_linear_block_write_address) for [Anonymous Symbol]
    lwrb.o(.ARM.exidx.text.lwrb_get_linear_block_write_length) refers to lwrb.o(.text.lwrb_get_linear_block_write_length) for [Anonymous Symbol]
    lwrb.o(.ARM.exidx.text.lwrb_advance) refers to lwrb.o(.text.lwrb_advance) for [Anonymous Symbol]
    lwrb.o(.ARM.exidx.text.lwrb_find) refers to lwrb.o(.text.lwrb_find) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_stm32f103xe.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_stm32f103xe.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing startup_stm32f103xe.o(HEAP), (512 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.Error_Handler), (8 bytes).
    Removing main.o(.rodata.str1.4), (16 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.ARM.exidx.text.MX_GPIO_Init), (8 bytes).
    Removing dma.o(.text), (0 bytes).
    Removing dma.o(.ARM.exidx.text.MX_DMA_Init), (8 bytes).
    Removing usart.o(.text), (0 bytes).
    Removing usart.o(.ARM.exidx.text.MX_USART1_UART_Init), (8 bytes).
    Removing stm32f1xx_it.o(.text), (0 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.MemManage_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.BusFault_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.UsageFault_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.DebugMon_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.DMA1_Channel4_IRQHandler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.DMA1_Channel5_IRQHandler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.text), (0 bytes).
    Removing stm32f1xx_ll_gpio.o(.text.LL_GPIO_DeInit), (116 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_DeInit), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_Init), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.text.LL_GPIO_StructInit), (22 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_StructInit), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text), (0 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit), (264 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_DeInit), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_Init), (96 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_Init), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_StructInit), (10 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_StructInit), (8 bytes).
    Removing stm32f1xx_ll_pwr.o(.text), (0 bytes).
    Removing stm32f1xx_ll_pwr.o(.text.LL_PWR_DeInit), (28 bytes).
    Removing stm32f1xx_ll_pwr.o(.ARM.exidx.text.LL_PWR_DeInit), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.text), (0 bytes).
    Removing stm32f1xx_ll_exti.o(.text.LL_EXTI_DeInit), (32 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DeInit), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.text.LL_EXTI_Init), (186 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_Init), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.text.LL_EXTI_StructInit), (12 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_StructInit), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text), (0 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_USART_DeInit), (216 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_DeInit), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_Init), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_USART_StructInit), (22 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_StructInit), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_USART_ClockInit), (54 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockInit), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_USART_ClockStructInit), (12 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockStructInit), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text), (0 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit), (154 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.RCC_GetSystemClockFreq), (68 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetSystemClockFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq), (28 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetHCLKClockFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq), (28 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK1ClockFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq), (28 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK2ClockFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq), (138 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSBClockFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS), (56 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_SYS), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq), (150 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetADCClockFreq), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text), (0 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_mDelay), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_SetFlashLatency), (88 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_SetFlashLatency), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI), (116 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem), (368 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE), (158 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSE), (8 bytes).
    Removing system_stm32f1xx.o(.text), (0 bytes).
    Removing system_stm32f1xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f1xx.o(.text.SystemCoreClockUpdate), (92 bytes).
    Removing system_stm32f1xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing mycandrive_reg.o(.text), (0 bytes).
    Removing mycandrive_reg.o(.text.CAN_Config), (636 bytes).
    Removing mycandrive_reg.o(.ARM.exidx.text.CAN_Config), (8 bytes).
    Removing mycandrive_reg.o(.text.CAN_SendMessage_Blocking), (502 bytes).
    Removing mycandrive_reg.o(.ARM.exidx.text.CAN_SendMessage_Blocking), (8 bytes).
    Removing mycandrive_reg.o(.ARM.exidx.text.CAN_SendMessage_NonBlocking), (8 bytes).
    Removing mycandrive_reg.o(.text.CAN_Check_Error), (102 bytes).
    Removing mycandrive_reg.o(.ARM.exidx.text.CAN_Check_Error), (8 bytes).
    Removing mycandrive_reg.o(.text.CAN_BusOff_Recover), (20 bytes).
    Removing mycandrive_reg.o(.ARM.exidx.text.CAN_BusOff_Recover), (8 bytes).
    Removing mycandrive_reg.o(.text.CAN_Data_Process), (66 bytes).
    Removing mycandrive_reg.o(.ARM.exidx.text.CAN_Data_Process), (8 bytes).
    Removing mycandrive_reg.o(.text.CAN_Get_CANMsg_From_RB_To_TXMailBox_IT), (90 bytes).
    Removing mycandrive_reg.o(.ARM.exidx.text.CAN_Get_CANMsg_From_RB_To_TXMailBox_IT), (8 bytes).
    Removing mycandrive_reg.o(.text.CAN_Get_CANMsg_From_RB_To_TXMailBox), (136 bytes).
    Removing mycandrive_reg.o(.ARM.exidx.text.CAN_Get_CANMsg_From_RB_To_TXMailBox), (8 bytes).
    Removing mycandrive_reg.o(.text.CAN_Send_CAN_STD_Message), (88 bytes).
    Removing mycandrive_reg.o(.ARM.exidx.text.CAN_Send_CAN_STD_Message), (8 bytes).
    Removing mycandrive_reg.o(.ARM.exidx.text.USB_HP_CAN1_TX_IRQHandler), (8 bytes).
    Removing mycandrive_reg.o(.ARM.exidx.text.CAN1_RX1_IRQHandler), (8 bytes).
    Removing mycandrive_reg.o(.bss.gCanESR), (6 bytes).
    Removing mycandrive_reg.o(.bss.g_TxCount), (8 bytes).
    Removing mycandrive_reg.o(.bss.g_CanRxRBDataBuffer), (1800 bytes).
    Removing mycandrive_reg.o(.bss.g_CanTxRBDataBuffer), (800 bytes).
    Removing myusartdrive.o(.text), (0 bytes).
    Removing myusartdrive.o(.text.USART1_SendString_Blocking), (58 bytes).
    Removing myusartdrive.o(.ARM.exidx.text.USART1_SendString_Blocking), (8 bytes).
    Removing myusartdrive.o(.text.USART1_Reinit), (326 bytes).
    Removing myusartdrive.o(.ARM.exidx.text.USART1_Reinit), (8 bytes).
    Removing myusartdrive.o(.text.USART1_TX_DMA1_Channel4_Interrupt_Handler), (222 bytes).
    Removing myusartdrive.o(.ARM.exidx.text.USART1_TX_DMA1_Channel4_Interrupt_Handler), (8 bytes).
    Removing myusartdrive.o(.text.USART1_RX_DMA1_Channel5_Interrupt_Handler), (198 bytes).
    Removing myusartdrive.o(.ARM.exidx.text.USART1_RX_DMA1_Channel5_Interrupt_Handler), (8 bytes).
    Removing myusartdrive.o(.text.USART1_RX_Interrupt_Handler), (174 bytes).
    Removing myusartdrive.o(.ARM.exidx.text.USART1_RX_Interrupt_Handler), (8 bytes).
    Removing myusartdrive.o(.text.USART1_Put_TxData_To_Ringbuffer), (180 bytes).
    Removing myusartdrive.o(.ARM.exidx.text.USART1_Put_TxData_To_Ringbuffer), (8 bytes).
    Removing myusartdrive.o(.text.USART1_Module_Run), (264 bytes).
    Removing myusartdrive.o(.ARM.exidx.text.USART1_Module_Run), (8 bytes).
    Removing myusartdrive.o(.text.USART1_Config), (262 bytes).
    Removing myusartdrive.o(.ARM.exidx.text.USART1_Config), (8 bytes).
    Removing myusartdrive.o(.text.USART1_Put_Data_Into_Ringbuffer), (130 bytes).
    Removing myusartdrive.o(.ARM.exidx.text.USART1_Put_Data_Into_Ringbuffer), (8 bytes).
    Removing myusartdrive.o(.bss.g_Usart1RxRB), (1024 bytes).
    Removing myusartdrive.o(.bss.g_Usart1TxRB), (2048 bytes).
    Removing myusartdrive.o(.bss.tx_buffer), (2048 bytes).
    Removing myusartdrive.o(.bss.rx_buffer), (1024 bytes).
    Removing myusartdrive.o(.bss..L_MergedGlobals), (80 bytes).
    Removing bsp_usart_drive.o(.text), (0 bytes).
    Removing bsp_usart_drive.o(.text.USART_LL_SendString_Blocking), (62 bytes).
    Removing bsp_usart_drive.o(.ARM.exidx.text.USART_LL_SendString_Blocking), (8 bytes).
    Removing bsp_usart_drive.o(.ARM.exidx.text.USART_LL_Put_TxData_To_Ringbuffer), (8 bytes).
    Removing bsp_usart_drive.o(.ARM.exidx.text.USART_LL_Module_Run), (8 bytes).
    Removing bsp_usart_drive.o(.text.USART_LL_Get_Available_RxData_Length), (14 bytes).
    Removing bsp_usart_drive.o(.ARM.exidx.text.USART_LL_Get_Available_RxData_Length), (8 bytes).
    Removing bsp_usart_drive.o(.text.USART_LL_Read_A_Byte_Data), (40 bytes).
    Removing bsp_usart_drive.o(.ARM.exidx.text.USART_LL_Read_A_Byte_Data), (8 bytes).
    Removing bsp_usart_drive.o(.ARM.exidx.text.USART_LL_DMA_TX_Interrupt_Handler), (8 bytes).
    Removing bsp_usart_drive.o(.ARM.exidx.text.USART_LL_DMA_RX_Interrupt_Handler), (8 bytes).
    Removing bsp_usart_drive.o(.ARM.exidx.text.USART_LL_RX_Interrupt_Handler), (8 bytes).
    Removing bsp_usart_drive.o(.ARM.exidx.text.USART_LL_Config), (8 bytes).
    Removing bsp_usart_drive.o(.text.USART_LL_DMA_Error_Recover), (224 bytes).
    Removing bsp_usart_drive.o(.ARM.exidx.text.USART_LL_DMA_Error_Recover), (8 bytes).
    Removing bsp_usart_drive.o(.ARM.exidx.text.USART_LL_Put_RxData_Into_Ringbuffer), (8 bytes).
    Removing lwrb.o(.text), (0 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_init), (8 bytes).
    Removing lwrb.o(.text.lwrb_is_ready), (20 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_is_ready), (8 bytes).
    Removing lwrb.o(.text.lwrb_free), (22 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_free), (8 bytes).
    Removing lwrb.o(.text.lwrb_set_evt_fn), (20 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_set_evt_fn), (8 bytes).
    Removing lwrb.o(.text.lwrb_set_arg), (20 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_set_arg), (8 bytes).
    Removing lwrb.o(.text.lwrb_get_arg), (10 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_get_arg), (8 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_write), (8 bytes).
    Removing lwrb.o(.text.lwrb_write_ex), (190 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_write_ex), (8 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_get_free), (8 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_read), (8 bytes).
    Removing lwrb.o(.text.lwrb_read_ex), (186 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_read_ex), (8 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_get_full), (8 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_peek), (8 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_reset), (8 bytes).
    Removing lwrb.o(.text.lwrb_get_linear_block_read_address), (20 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_get_linear_block_read_address), (8 bytes).
    Removing lwrb.o(.text.lwrb_get_linear_block_read_length), (36 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_get_linear_block_read_length), (8 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_skip), (8 bytes).
    Removing lwrb.o(.text.lwrb_get_linear_block_write_address), (20 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_get_linear_block_write_address), (8 bytes).
    Removing lwrb.o(.text.lwrb_get_linear_block_write_length), (40 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_get_linear_block_write_length), (8 bytes).
    Removing lwrb.o(.text.lwrb_advance), (84 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_advance), (8 bytes).
    Removing lwrb.o(.text.lwrb_find), (278 bytes).
    Removing lwrb.o(.ARM.exidx.text.lwrb_find), (8 bytes).
    Removing lwrb_ex.o(.text), (0 bytes).

193 unused section(s) (total 17476 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    bsp_usart_drive.c                        0x00000000   Number         0  bsp_usart_drive.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    dma.c                                    0x00000000   Number         0  dma.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    lwrb.c                                   0x00000000   Number         0  lwrb.o ABSOLUTE
    lwrb_ex.c                                0x00000000   Number         0  lwrb_ex.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    myCanDrive_reg.c                         0x00000000   Number         0  mycandrive_reg.o ABSOLUTE
    myUsartDrive.c                           0x00000000   Number         0  myusartdrive.o ABSOLUTE
    startup_stm32f103xe.s                    0x00000000   Number         0  startup_stm32f103xe.o ABSOLUTE
    stm32f1xx_it.c                           0x00000000   Number         0  stm32f1xx_it.o ABSOLUTE
    stm32f1xx_ll_dma.c                       0x00000000   Number         0  stm32f1xx_ll_dma.o ABSOLUTE
    stm32f1xx_ll_exti.c                      0x00000000   Number         0  stm32f1xx_ll_exti.o ABSOLUTE
    stm32f1xx_ll_gpio.c                      0x00000000   Number         0  stm32f1xx_ll_gpio.o ABSOLUTE
    stm32f1xx_ll_pwr.c                       0x00000000   Number         0  stm32f1xx_ll_pwr.o ABSOLUTE
    stm32f1xx_ll_rcc.c                       0x00000000   Number         0  stm32f1xx_ll_rcc.o ABSOLUTE
    stm32f1xx_ll_usart.c                     0x00000000   Number         0  stm32f1xx_ll_usart.o ABSOLUTE
    stm32f1xx_ll_utils.c                     0x00000000   Number         0  stm32f1xx_ll_utils.o ABSOLUTE
    system_stm32f1xx.c                       0x00000000   Number         0  system_stm32f1xx.o ABSOLUTE
    usart.c                                  0x00000000   Number         0  usart.o ABSOLUTE
    RESET                                    0x08000000   Section      304  startup_stm32f103xe.o(RESET)
    .ARM.Collect$$$$00000000                 0x08000130   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x08000130   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x08000134   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x08000138   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x08000138   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x08000138   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x08000140   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x08000140   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x08000140   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x08000140   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x08000144   Section       36  startup_stm32f103xe.o(.text)
    .text                                    0x08000168   Section        0  memcpya.o(.text)
    .text                                    0x0800018c   Section        0  strlen.o(.text)
    .text                                    0x0800019c   Section       48  init.o(.text)
    [Anonymous Symbol]                       0x080001cc   Section        0  stm32f1xx_it.o(.text.BusFault_Handler)
    [Anonymous Symbol]                       0x080001d0   Section        0  mycandrive_reg.o(.text.CAN1_RX1_IRQHandler)
    [Anonymous Symbol]                       0x0800037c   Section        0  mycandrive_reg.o(.text.CAN_SendMessage_NonBlocking)
    [Anonymous Symbol]                       0x08000504   Section        0  stm32f1xx_it.o(.text.DMA1_Channel4_IRQHandler)
    [Anonymous Symbol]                       0x08000510   Section        0  stm32f1xx_it.o(.text.DMA1_Channel5_IRQHandler)
    [Anonymous Symbol]                       0x0800051c   Section        0  stm32f1xx_it.o(.text.DebugMon_Handler)
    [Anonymous Symbol]                       0x08000520   Section        0  main.o(.text.Error_Handler)
    [Anonymous Symbol]                       0x0800052c   Section        0  stm32f1xx_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x08000530   Section        0  stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init)
    [Anonymous Symbol]                       0x080005f0   Section        0  stm32f1xx_ll_utils.o(.text.LL_Init1msTick)
    [Anonymous Symbol]                       0x08000618   Section        0  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq)
    [Anonymous Symbol]                       0x080006a4   Section        0  stm32f1xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    [Anonymous Symbol]                       0x080006b0   Section        0  stm32f1xx_ll_usart.o(.text.LL_USART_Init)
    [Anonymous Symbol]                       0x080007a8   Section        0  stm32f1xx_ll_utils.o(.text.LL_mDelay)
    [Anonymous Symbol]                       0x080007f0   Section        0  dma.o(.text.MX_DMA_Init)
    [Anonymous Symbol]                       0x08000844   Section        0  gpio.o(.text.MX_GPIO_Init)
    [Anonymous Symbol]                       0x080008d8   Section        0  usart.o(.text.MX_USART1_UART_Init)
    [Anonymous Symbol]                       0x08000a48   Section        0  stm32f1xx_it.o(.text.MemManage_Handler)
    [Anonymous Symbol]                       0x08000a4c   Section        0  stm32f1xx_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x08000a50   Section        0  stm32f1xx_it.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x08000a54   Section        0  stm32f1xx_it.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x08000a58   Section        0  stm32f1xx_it.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x08000a5c   Section        0  main.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x08000b6c   Section        0  system_stm32f1xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08000b70   Section        0  stm32f1xx_it.o(.text.USART1_IRQHandler)
    [Anonymous Symbol]                       0x08000b7c   Section        0  bsp_usart_drive.o(.text.USART_LL_Config)
    [Anonymous Symbol]                       0x08000cb4   Section        0  bsp_usart_drive.o(.text.USART_LL_DMA_RX_Interrupt_Handler)
    [Anonymous Symbol]                       0x08000e9c   Section        0  bsp_usart_drive.o(.text.USART_LL_DMA_TX_Interrupt_Handler)
    [Anonymous Symbol]                       0x08001044   Section        0  bsp_usart_drive.o(.text.USART_LL_Module_Run)
    USART_LL_Put_RxData_Into_Ringbuffer      0x08001161   Thumb Code   116  bsp_usart_drive.o(.text.USART_LL_Put_RxData_Into_Ringbuffer)
    [Anonymous Symbol]                       0x08001160   Section        0  bsp_usart_drive.o(.text.USART_LL_Put_RxData_Into_Ringbuffer)
    [Anonymous Symbol]                       0x080011d4   Section        0  bsp_usart_drive.o(.text.USART_LL_Put_TxData_To_Ringbuffer)
    [Anonymous Symbol]                       0x08001270   Section        0  bsp_usart_drive.o(.text.USART_LL_RX_Interrupt_Handler)
    [Anonymous Symbol]                       0x0800132c   Section        0  mycandrive_reg.o(.text.USB_HP_CAN1_TX_IRQHandler)
    [Anonymous Symbol]                       0x080013e8   Section        0  stm32f1xx_it.o(.text.UsageFault_Handler)
    [Anonymous Symbol]                       0x080013ec   Section        0  lwrb.o(.text.lwrb_get_free)
    [Anonymous Symbol]                       0x0800140c   Section        0  lwrb.o(.text.lwrb_get_full)
    [Anonymous Symbol]                       0x0800142c   Section        0  lwrb.o(.text.lwrb_init)
    [Anonymous Symbol]                       0x08001450   Section        0  lwrb.o(.text.lwrb_peek)
    [Anonymous Symbol]                       0x080014d8   Section        0  lwrb.o(.text.lwrb_read)
    [Anonymous Symbol]                       0x08001584   Section        0  lwrb.o(.text.lwrb_reset)
    [Anonymous Symbol]                       0x080015b0   Section        0  lwrb.o(.text.lwrb_skip)
    [Anonymous Symbol]                       0x080015fc   Section        0  lwrb.o(.text.lwrb_write)
    [Anonymous Symbol]                       0x080016a8   Section        0  main.o(.text.main)
    i.__scatterload_copy                     0x0800181a   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x08001828   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x0800182a   Section       14  handlers.o(i.__scatterload_zeroinit)
    CHANNEL_OFFSET_TAB                       0x08001850   Data           7  bsp_usart_drive.o(.rodata.CHANNEL_OFFSET_TAB)
    [Anonymous Symbol]                       0x08001850   Section        0  bsp_usart_drive.o(.rodata.CHANNEL_OFFSET_TAB)
    .L_MergedGlobals                         0x20000008   Data          80  mycandrive_reg.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000008   Section        0  mycandrive_reg.o(.bss..L_MergedGlobals)
    usart1_rx_dma_buffer                     0x200000d8   Data        1024  main.o(.bss.usart1_rx_dma_buffer)
    [Anonymous Symbol]                       0x200000d8   Section        0  main.o(.bss.usart1_rx_dma_buffer)
    usart1_rx_rb_buffer                      0x200004d8   Data        1024  main.o(.bss.usart1_rx_rb_buffer)
    [Anonymous Symbol]                       0x200004d8   Section        0  main.o(.bss.usart1_rx_rb_buffer)
    usart1_tx_dma_buffer                     0x200008d8   Data        2048  main.o(.bss.usart1_tx_dma_buffer)
    [Anonymous Symbol]                       0x200008d8   Section        0  main.o(.bss.usart1_tx_dma_buffer)
    usart1_tx_rb_buffer                      0x200010d8   Data        2048  main.o(.bss.usart1_tx_rb_buffer)
    [Anonymous Symbol]                       0x200010d8   Section        0  main.o(.bss.usart1_tx_rb_buffer)
    STACK                                    0x200018d8   Section     1024  startup_stm32f103xe.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x00000130   Number         0  startup_stm32f103xe.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f103xe.o(RESET)
    __Vectors_End                            0x08000130   Data           0  startup_stm32f103xe.o(RESET)
    __main                                   0x08000131   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x08000131   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x08000135   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x08000139   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x08000139   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x08000139   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x08000139   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x08000141   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x08000141   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x08000145   Thumb Code     8  startup_stm32f103xe.o(.text)
    ADC1_2_IRQHandler                        0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    ADC3_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    CAN1_SCE_IRQHandler                      0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA1_Channel1_IRQHandler                 0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA1_Channel2_IRQHandler                 0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA1_Channel3_IRQHandler                 0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA1_Channel6_IRQHandler                 0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA1_Channel7_IRQHandler                 0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA2_Channel1_IRQHandler                 0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA2_Channel2_IRQHandler                 0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA2_Channel3_IRQHandler                 0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA2_Channel4_5_IRQHandler               0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI0_IRQHandler                         0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI15_10_IRQHandler                     0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI1_IRQHandler                         0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI2_IRQHandler                         0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI3_IRQHandler                         0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI4_IRQHandler                         0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI9_5_IRQHandler                       0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    FLASH_IRQHandler                         0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    FSMC_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    I2C1_ER_IRQHandler                       0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    I2C1_EV_IRQHandler                       0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    I2C2_ER_IRQHandler                       0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    I2C2_EV_IRQHandler                       0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    PVD_IRQHandler                           0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    RCC_IRQHandler                           0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    RTC_Alarm_IRQHandler                     0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    RTC_IRQHandler                           0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    SDIO_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    SPI1_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    SPI2_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    SPI3_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    TAMPER_IRQHandler                        0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM1_BRK_IRQHandler                      0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM1_CC_IRQHandler                       0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM1_UP_IRQHandler                       0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM2_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM3_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM4_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM5_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM6_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM7_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM8_BRK_IRQHandler                      0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM8_CC_IRQHandler                       0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM8_TRG_COM_IRQHandler                  0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM8_UP_IRQHandler                       0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    UART4_IRQHandler                         0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    UART5_IRQHandler                         0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    USART2_IRQHandler                        0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    USART3_IRQHandler                        0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    USBWakeUp_IRQHandler                     0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    WWDG_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f103xe.o(.text)
    __aeabi_memcpy                           0x08000169   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x08000169   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x08000169   Thumb Code     0  memcpya.o(.text)
    strlen                                   0x0800018d   Thumb Code    14  strlen.o(.text)
    __scatterload                            0x0800019d   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x0800019d   Thumb Code     0  init.o(.text)
    BusFault_Handler                         0x080001cd   Thumb Code     2  stm32f1xx_it.o(.text.BusFault_Handler)
    CAN1_RX1_IRQHandler                      0x080001d1   Thumb Code   428  mycandrive_reg.o(.text.CAN1_RX1_IRQHandler)
    CAN_SendMessage_NonBlocking              0x0800037d   Thumb Code   390  mycandrive_reg.o(.text.CAN_SendMessage_NonBlocking)
    DMA1_Channel4_IRQHandler                 0x08000505   Thumb Code    12  stm32f1xx_it.o(.text.DMA1_Channel4_IRQHandler)
    DMA1_Channel5_IRQHandler                 0x08000511   Thumb Code    12  stm32f1xx_it.o(.text.DMA1_Channel5_IRQHandler)
    DebugMon_Handler                         0x0800051d   Thumb Code     2  stm32f1xx_it.o(.text.DebugMon_Handler)
    Error_Handler                            0x08000521   Thumb Code    10  main.o(.text.Error_Handler)
    HardFault_Handler                        0x0800052d   Thumb Code     2  stm32f1xx_it.o(.text.HardFault_Handler)
    LL_GPIO_Init                             0x08000531   Thumb Code   190  stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init)
    LL_Init1msTick                           0x080005f1   Thumb Code    40  stm32f1xx_ll_utils.o(.text.LL_Init1msTick)
    LL_RCC_GetSystemClocksFreq               0x08000619   Thumb Code   140  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq)
    LL_SetSystemCoreClock                    0x080006a5   Thumb Code    12  stm32f1xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    LL_USART_Init                            0x080006b1   Thumb Code   246  stm32f1xx_ll_usart.o(.text.LL_USART_Init)
    LL_mDelay                                0x080007a9   Thumb Code    70  stm32f1xx_ll_utils.o(.text.LL_mDelay)
    MX_DMA_Init                              0x080007f1   Thumb Code    82  dma.o(.text.MX_DMA_Init)
    MX_GPIO_Init                             0x08000845   Thumb Code   146  gpio.o(.text.MX_GPIO_Init)
    MX_USART1_UART_Init                      0x080008d9   Thumb Code   368  usart.o(.text.MX_USART1_UART_Init)
    MemManage_Handler                        0x08000a49   Thumb Code     2  stm32f1xx_it.o(.text.MemManage_Handler)
    NMI_Handler                              0x08000a4d   Thumb Code     2  stm32f1xx_it.o(.text.NMI_Handler)
    PendSV_Handler                           0x08000a51   Thumb Code     2  stm32f1xx_it.o(.text.PendSV_Handler)
    SVC_Handler                              0x08000a55   Thumb Code     2  stm32f1xx_it.o(.text.SVC_Handler)
    SysTick_Handler                          0x08000a59   Thumb Code     2  stm32f1xx_it.o(.text.SysTick_Handler)
    SystemClock_Config                       0x08000a5d   Thumb Code   272  main.o(.text.SystemClock_Config)
    SystemInit                               0x08000b6d   Thumb Code     2  system_stm32f1xx.o(.text.SystemInit)
    USART1_IRQHandler                        0x08000b71   Thumb Code    12  stm32f1xx_it.o(.text.USART1_IRQHandler)
    USART_LL_Config                          0x08000b7d   Thumb Code   310  bsp_usart_drive.o(.text.USART_LL_Config)
    USART_LL_DMA_RX_Interrupt_Handler        0x08000cb5   Thumb Code   486  bsp_usart_drive.o(.text.USART_LL_DMA_RX_Interrupt_Handler)
    USART_LL_DMA_TX_Interrupt_Handler        0x08000e9d   Thumb Code   422  bsp_usart_drive.o(.text.USART_LL_DMA_TX_Interrupt_Handler)
    USART_LL_Module_Run                      0x08001045   Thumb Code   284  bsp_usart_drive.o(.text.USART_LL_Module_Run)
    USART_LL_Put_TxData_To_Ringbuffer        0x080011d5   Thumb Code   154  bsp_usart_drive.o(.text.USART_LL_Put_TxData_To_Ringbuffer)
    USART_LL_RX_Interrupt_Handler            0x08001271   Thumb Code   186  bsp_usart_drive.o(.text.USART_LL_RX_Interrupt_Handler)
    USB_HP_CAN1_TX_IRQHandler                0x0800132d   Thumb Code   188  mycandrive_reg.o(.text.USB_HP_CAN1_TX_IRQHandler)
    UsageFault_Handler                       0x080013e9   Thumb Code     2  stm32f1xx_it.o(.text.UsageFault_Handler)
    lwrb_get_free                            0x080013ed   Thumb Code    32  lwrb.o(.text.lwrb_get_free)
    lwrb_get_full                            0x0800140d   Thumb Code    32  lwrb.o(.text.lwrb_get_full)
    lwrb_init                                0x0800142d   Thumb Code    36  lwrb.o(.text.lwrb_init)
    lwrb_peek                                0x08001451   Thumb Code   134  lwrb.o(.text.lwrb_peek)
    lwrb_read                                0x080014d9   Thumb Code   170  lwrb.o(.text.lwrb_read)
    lwrb_reset                               0x08001585   Thumb Code    42  lwrb.o(.text.lwrb_reset)
    lwrb_skip                                0x080015b1   Thumb Code    76  lwrb.o(.text.lwrb_skip)
    lwrb_write                               0x080015fd   Thumb Code   170  lwrb.o(.text.lwrb_write)
    main                                     0x080016a9   Thumb Code   370  main.o(.text.main)
    __scatterload_copy                       0x0800181b   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x08001829   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x0800182b   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    AHBPrescTable                            0x08001838   Data          16  system_stm32f1xx.o(.rodata.AHBPrescTable)
    APBPrescTable                            0x08001848   Data           8  system_stm32f1xx.o(.rodata.APBPrescTable)
    Region$$Table$$Base                      0x08001858   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08001878   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_stm32f1xx.o(.data.SystemCoreClock)
    txmail_free                              0x20000008   Data           1  mycandrive_reg.o(.bss..L_MergedGlobals)
    canSendError                             0x2000000c   Data           4  mycandrive_reg.o(.bss..L_MergedGlobals)
    g_RxOverflowError                        0x20000010   Data           4  mycandrive_reg.o(.bss..L_MergedGlobals)
    g_RXRingbufferOverflow                   0x20000014   Data           4  mycandrive_reg.o(.bss..L_MergedGlobals)
    g_RxCount                                0x20000018   Data           8  mycandrive_reg.o(.bss..L_MergedGlobals)
    g_HandleRxMsg                            0x20000020   Data           8  mycandrive_reg.o(.bss..L_MergedGlobals)
    g_CanRxRBHandler                         0x20000028   Data          24  mycandrive_reg.o(.bss..L_MergedGlobals)
    g_CanTxRBHandler                         0x20000040   Data          24  mycandrive_reg.o(.bss..L_MergedGlobals)
    usart1_driver                            0x20000058   Data         128  main.o(.bss.usart1_driver)
    __initial_sp                             0x20001cd8   Data           0  startup_stm32f103xe.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000131

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00001880, Max: 0x00080000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00001878, Max: 0x00080000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000130   Data   RO            3    RESET               startup_stm32f103xe.o
    0x08000130   0x08000130   0x00000000   Code   RO          368  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x08000130   0x08000130   0x00000004   Code   RO          379    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x08000134   0x08000134   0x00000004   Code   RO          382    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x08000138   0x08000138   0x00000000   Code   RO          384    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x08000138   0x08000138   0x00000000   Code   RO          386    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x08000138   0x08000138   0x00000008   Code   RO          387    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x08000140   0x08000140   0x00000000   Code   RO          389    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x08000140   0x08000140   0x00000000   Code   RO          391    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x08000140   0x08000140   0x00000004   Code   RO          380    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x08000144   0x08000144   0x00000024   Code   RO            4    .text               startup_stm32f103xe.o
    0x08000168   0x08000168   0x00000024   Code   RO          371    .text               mc_w.l(memcpya.o)
    0x0800018c   0x0800018c   0x0000000e   Code   RO          375    .text               mc_w.l(strlen.o)
    0x0800019a   0x0800019a   0x00000002   PAD
    0x0800019c   0x0800019c   0x00000030   Code   RO          393    .text               mc_w.l(init.o)
    0x080001cc   0x080001cc   0x00000002   Code   RO           64    .text.BusFault_Handler  stm32f1xx_it.o
    0x080001ce   0x080001ce   0x00000002   PAD
    0x080001d0   0x080001d0   0x000001ac   Code   RO          241    .text.CAN1_RX1_IRQHandler  mycandrive_reg.o
    0x0800037c   0x0800037c   0x00000186   Code   RO          225    .text.CAN_SendMessage_NonBlocking  mycandrive_reg.o
    0x08000502   0x08000502   0x00000002   PAD
    0x08000504   0x08000504   0x0000000c   Code   RO           76    .text.DMA1_Channel4_IRQHandler  stm32f1xx_it.o
    0x08000510   0x08000510   0x0000000c   Code   RO           78    .text.DMA1_Channel5_IRQHandler  stm32f1xx_it.o
    0x0800051c   0x0800051c   0x00000002   Code   RO           70    .text.DebugMon_Handler  stm32f1xx_it.o
    0x0800051e   0x0800051e   0x00000002   PAD
    0x08000520   0x08000520   0x0000000a   Code   RO           15    .text.Error_Handler  main.o
    0x0800052a   0x0800052a   0x00000002   PAD
    0x0800052c   0x0800052c   0x00000002   Code   RO           60    .text.HardFault_Handler  stm32f1xx_it.o
    0x0800052e   0x0800052e   0x00000002   PAD
    0x08000530   0x08000530   0x000000be   Code   RO           91    .text.LL_GPIO_Init  stm32f1xx_ll_gpio.o
    0x080005ee   0x080005ee   0x00000002   PAD
    0x080005f0   0x080005f0   0x00000028   Code   RO          184    .text.LL_Init1msTick  stm32f1xx_ll_utils.o
    0x08000618   0x08000618   0x0000008c   Code   RO          160    .text.LL_RCC_GetSystemClocksFreq  stm32f1xx_ll_rcc.o
    0x080006a4   0x080006a4   0x0000000c   Code   RO          188    .text.LL_SetSystemCoreClock  stm32f1xx_ll_utils.o
    0x080006b0   0x080006b0   0x000000f6   Code   RO          142    .text.LL_USART_Init  stm32f1xx_ll_usart.o
    0x080007a6   0x080007a6   0x00000002   PAD
    0x080007a8   0x080007a8   0x00000046   Code   RO          186    .text.LL_mDelay     stm32f1xx_ll_utils.o
    0x080007ee   0x080007ee   0x00000002   PAD
    0x080007f0   0x080007f0   0x00000052   Code   RO           41    .text.MX_DMA_Init   dma.o
    0x08000842   0x08000842   0x00000002   PAD
    0x08000844   0x08000844   0x00000092   Code   RO           32    .text.MX_GPIO_Init  gpio.o
    0x080008d6   0x080008d6   0x00000002   PAD
    0x080008d8   0x080008d8   0x00000170   Code   RO           49    .text.MX_USART1_UART_Init  usart.o
    0x08000a48   0x08000a48   0x00000002   Code   RO           62    .text.MemManage_Handler  stm32f1xx_it.o
    0x08000a4a   0x08000a4a   0x00000002   PAD
    0x08000a4c   0x08000a4c   0x00000002   Code   RO           58    .text.NMI_Handler   stm32f1xx_it.o
    0x08000a4e   0x08000a4e   0x00000002   PAD
    0x08000a50   0x08000a50   0x00000002   Code   RO           72    .text.PendSV_Handler  stm32f1xx_it.o
    0x08000a52   0x08000a52   0x00000002   PAD
    0x08000a54   0x08000a54   0x00000002   Code   RO           68    .text.SVC_Handler   stm32f1xx_it.o
    0x08000a56   0x08000a56   0x00000002   PAD
    0x08000a58   0x08000a58   0x00000002   Code   RO           74    .text.SysTick_Handler  stm32f1xx_it.o
    0x08000a5a   0x08000a5a   0x00000002   PAD
    0x08000a5c   0x08000a5c   0x00000110   Code   RO           13    .text.SystemClock_Config  main.o
    0x08000b6c   0x08000b6c   0x00000002   Code   RO          206    .text.SystemInit    system_stm32f1xx.o
    0x08000b6e   0x08000b6e   0x00000002   PAD
    0x08000b70   0x08000b70   0x0000000c   Code   RO           80    .text.USART1_IRQHandler  stm32f1xx_it.o
    0x08000b7c   0x08000b7c   0x00000136   Code   RO          303    .text.USART_LL_Config  bsp_usart_drive.o
    0x08000cb2   0x08000cb2   0x00000002   PAD
    0x08000cb4   0x08000cb4   0x000001e6   Code   RO          299    .text.USART_LL_DMA_RX_Interrupt_Handler  bsp_usart_drive.o
    0x08000e9a   0x08000e9a   0x00000002   PAD
    0x08000e9c   0x08000e9c   0x000001a6   Code   RO          297    .text.USART_LL_DMA_TX_Interrupt_Handler  bsp_usart_drive.o
    0x08001042   0x08001042   0x00000002   PAD
    0x08001044   0x08001044   0x0000011c   Code   RO          291    .text.USART_LL_Module_Run  bsp_usart_drive.o
    0x08001160   0x08001160   0x00000074   Code   RO          307    .text.USART_LL_Put_RxData_Into_Ringbuffer  bsp_usart_drive.o
    0x080011d4   0x080011d4   0x0000009a   Code   RO          289    .text.USART_LL_Put_TxData_To_Ringbuffer  bsp_usart_drive.o
    0x0800126e   0x0800126e   0x00000002   PAD
    0x08001270   0x08001270   0x000000ba   Code   RO          301    .text.USART_LL_RX_Interrupt_Handler  bsp_usart_drive.o
    0x0800132a   0x0800132a   0x00000002   PAD
    0x0800132c   0x0800132c   0x000000bc   Code   RO          239    .text.USB_HP_CAN1_TX_IRQHandler  mycandrive_reg.o
    0x080013e8   0x080013e8   0x00000002   Code   RO           66    .text.UsageFault_Handler  stm32f1xx_it.o
    0x080013ea   0x080013ea   0x00000002   PAD
    0x080013ec   0x080013ec   0x00000020   Code   RO          334    .text.lwrb_get_free  lwrb.o
    0x0800140c   0x0800140c   0x00000020   Code   RO          340    .text.lwrb_get_full  lwrb.o
    0x0800142c   0x0800142c   0x00000024   Code   RO          318    .text.lwrb_init     lwrb.o
    0x08001450   0x08001450   0x00000086   Code   RO          342    .text.lwrb_peek     lwrb.o
    0x080014d6   0x080014d6   0x00000002   PAD
    0x080014d8   0x080014d8   0x000000aa   Code   RO          336    .text.lwrb_read     lwrb.o
    0x08001582   0x08001582   0x00000002   PAD
    0x08001584   0x08001584   0x0000002a   Code   RO          344    .text.lwrb_reset    lwrb.o
    0x080015ae   0x080015ae   0x00000002   PAD
    0x080015b0   0x080015b0   0x0000004c   Code   RO          350    .text.lwrb_skip     lwrb.o
    0x080015fc   0x080015fc   0x000000aa   Code   RO          330    .text.lwrb_write    lwrb.o
    0x080016a6   0x080016a6   0x00000002   PAD
    0x080016a8   0x080016a8   0x00000172   Code   RO           11    .text.main          main.o
    0x0800181a   0x0800181a   0x0000000e   Code   RO          397    i.__scatterload_copy  mc_w.l(handlers.o)
    0x08001828   0x08001828   0x00000002   Code   RO          398    i.__scatterload_null  mc_w.l(handlers.o)
    0x0800182a   0x0800182a   0x0000000e   Code   RO          399    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x08001838   0x08001838   0x00000010   Data   RO          211    .rodata.AHBPrescTable  system_stm32f1xx.o
    0x08001848   0x08001848   0x00000008   Data   RO          212    .rodata.APBPrescTable  system_stm32f1xx.o
    0x08001850   0x08001850   0x00000007   Data   RO          309    .rodata.CHANNEL_OFFSET_TAB  bsp_usart_drive.o
    0x08001857   0x08001857   0x00000001   PAD
    0x08001858   0x08001858   0x00000020   Data   RO          396    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08001878, Size: 0x00001cd8, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08001878   0x00000004   Data   RW          210    .data.SystemCoreClock  system_stm32f1xx.o
    0x20000004   0x0800187c   0x00000004   PAD
    0x20000008        -       0x00000050   Zero   RW          247    .bss..L_MergedGlobals  mycandrive_reg.o
    0x20000058        -       0x00000080   Zero   RW           17    .bss.usart1_driver  main.o
    0x200000d8        -       0x00000400   Zero   RW           18    .bss.usart1_rx_dma_buffer  main.o
    0x200004d8        -       0x00000400   Zero   RW           19    .bss.usart1_rx_rb_buffer  main.o
    0x200008d8        -       0x00000800   Zero   RW           20    .bss.usart1_tx_dma_buffer  main.o
    0x200010d8        -       0x00000800   Zero   RW           21    .bss.usart1_tx_rb_buffer  main.o
    0x200018d8        -       0x00000400   Zero   RW            1    STACK               startup_stm32f103xe.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1958         18          7          0          0      16425   bsp_usart_drive.o
        82          0          0          0          0       3975   dma.o
       146          0          0          0          0       2061   gpio.o
       692          0          0          0          0      12924   lwrb.o
       652          0          0          0       6272       8727   main.o
      1006          0          0          0         80      13931   mycandrive_reg.o
        36          8        304          0       1024        812   startup_stm32f103xe.o
        54          0          0          0          0       3130   stm32f1xx_it.o
       190          0          0          0          0       3248   stm32f1xx_ll_gpio.o
       140          0          0          0          0       6809   stm32f1xx_ll_rcc.o
       246          0          0          0          0       4709   stm32f1xx_ll_usart.o
       122          0          0          0          0       7887   stm32f1xx_ll_utils.o
         2          0         24          4          0       1617   system_stm32f1xx.o
       368          0          0          0          0       7343   usart.o

    ----------------------------------------------------------------------
      5746         26        368          4       7380      93598   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        52          0          1          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o
        36          0          0          0          0         68   memcpya.o
        14          0          0          0          0         68   strlen.o

    ----------------------------------------------------------------------
       150         18          0          0          0        204   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       148         18          0          0          0        204   mc_w.l

    ----------------------------------------------------------------------
       150         18          0          0          0        204   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      5896         44        368          4       7380      93714   Grand Totals
      5896         44        368          4       7380      93714   ELF Image Totals
      5896         44        368          4          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 6264 (   6.12kB)
    Total RW  Size (RW Data + ZI Data)              7384 (   7.21kB)
    Total ROM Size (Code + RO Data + RW Data)       6268 (   6.12kB)

==============================================================================

